name: CI

# triggers pipeline when push is made to any branch (typical CI pipeline rule)
on: [push]

jobs:
  sast_scan:
    name: Run Bandit Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Bandit
      run: pip install bandit

    - name: Run Bandit Scan
      # Safe report in JSON format
      run: bandit -ll -ii -r . -f json -o bandit-report.json

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      # Execute this step regardless of previous status
      if: always()
      with:
        # Name of the artifact when exported
        name: bandit-findings.json
        path: bandit-report.json

  image_scan:
    name: Build and Run Image Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker-practice/actions-setup-docker@v1
      with:
        docker_version: '20.10.7'

    - name: Build Docker Image
      run: docker build -f Dockerfile -t mytestapp:latest .

    - name: Docker Scout Scan
      uses: docker/scout-action@v1.15.1
      with:
        dockerhub-user: ${{ secrets.DOCKERHUB_USERNAME }}
        dockerhub-password: ${{ secrets.DOCKERHUB_PASSWORD }}
        command: quickview,cves
        only-severities: critical,high
        sarif-file: scout-report.sarif
        exit-code: true

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: docker-scout-findings
        path: scout-report.sarif

  dast_scan:
    name: Deploy PyGoat and Run DAST Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker-practice/actions-setup-docker@v1
      with:
        docker_version: '20.10.7'

    - name: Pull and Run PyGoat
      run: |
        docker pull pygoat/pygoat:latest
        docker run --rm -d -p 8000:8000 pygoat/pygoat:latest
        sleep 30

    - name: Install ZAP
      run: |
        sudo apt update
        sudo apt install -y zaproxy

    - name: Run ZAP DAST Scan
      run: |
        zap.sh -daemon -port 8080
        sleep 30
        zap-cli quick-scan http://localhost:8000
        sleep 30
        zap-cli report -o zap-report.html -f html

    - name: Upload DAST Report Artifact
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: dast-report
        path: dast-report.html
